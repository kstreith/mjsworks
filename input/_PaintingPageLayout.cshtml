@{
    Layout = @"/_Layout.cshtml";
    string title = Model.String("Title");
    string description = Model.String("Description");
    string file = Model.String("File");
    string size = Model.String("Size");
    string sku = Model.String("Sku");
    bool sold = Model.Bool("Sold");
    bool forSale = Model.Bool("ForSale");
    bool showSellUi = forSale && !sold;
    string showSellUiCss = showSellUi ? "sellUi" : null;
    string imageWidth = Model.String("PaintingImageWidth");
    string imageHeight = Model.String("PaintingImageHeight");
    string imageMimeType = Model.String("PaintingImageMimeType");
    string price = $"{Model.Get<double>("Price"):C}";
    double? originalPrice = Model.Get<double?>("OriginalPrice");
    string originalPriceFormatted = null;
    if (originalPrice != null) 
    {
      originalPriceFormatted = $"{originalPrice:C}";
    }
    string saleDescription = $"{description} Original encaustic painting on wood birch panel with wire hanger";
    var parentGalleriesJson = Model.Get<string>("ParentGalleriesJson");
}

@section Metadata {
<meta property="og:title" content="@title"></meta>
<meta property="og:description" content="@description">
<meta property="og:image" content='@Context.GetLink(file, true)'>
<meta property="og:image:secure_url" content='@Context.GetLink(file, true)'>
<meta property="og:image:type" content="@imageMimeType">
<meta property="og:image:alt" content="@title">
<meta property="og:image:width" content="@imageWidth">
<meta property="og:image:height" content="@imageHeight">
<meta name="description" content="@description">
}

<div class="content gallerycontent @showSellUiCss">
  <div class="gallerynav" style="display: none">
      <a id="prevGalleryImageLink" style="float:left" href=""><i class="icon-left-circled"></i></a>
      <a id="nextGalleryImageLink" style="float:right" href=""><i class="icon-right-circled"></i></a>
  </div>
  <div class="gallerynav" style="display: none">
      <a id="galleryHomeLink" href=""><i class="icon-th-large"></i></a>
  </div>
  <div class="galleryimagetitle">@title</div>
  <div class="columnContainer">
    <div class="details">
      <div class="galleryimage">
        <img src="@file" alt="@title" />
      </div>
    </div>
    @if (showSellUi)
    {
    <div class="sellPanel">
      <div>
        <div>Price: @price @if (originalPriceFormatted != null) {<span class="originalPrice">@originalPriceFormatted</span>}</div>
        <div>Panel Size: @size</div>
        <div>Shipping: <a href="/faq.html#shipping_policy">Free</a></div>
        <div>Quantity: 1</div>
      </div>
      <div style="padding-top: 1em; padding-bottom: 1em">
        <div>@saleDescription</div>
      </div>
      <div style="padding-bottom: 1em">Purchase using your existing Amazon account</div>
      <div id="AmazonPayButton"></div>  
      <div class="sellFooter">
          <div>Details about <a href="/faq.html#about_paintings">encaustic paintings</a>, <a href="/faq.html#how_to_care">how to care</a>, and <a href="/faq.html#return_policy">return policy</a></div>
          <div>SKU #@sku</div>    
      </div>
    </div>
    } else {
    <div class="galleryimagedescription">
      @if (sold == true) {
      <div class="photoblocktext sold">Sold</div>
      } else {
      <div class="photoblocktext">@size</div>
      }
    </div>
    } 
  </div>
</div>

@{ IgnoreBody(); }

@section Scripts {
  <script type="text/javascript">
    var mjsworks = mjsworks || {};
    mjsworks.parentGalleries = @Html.Raw(parentGalleriesJson);
    var data = mjsworks.parseQuery();
    showGalleryNav(data["gallery"]);
    
    function setLink(selector, link) {
        var domNode = document.querySelector(selector);
        if (!domNode) {
            return;
        }
        domNode.href = link;        
    }

    function showGalleryNav(currentGallery) {
      if (!currentGallery) {
        return;
      }
      var matchedGallery = mjsworks.parentGalleries[currentGallery];
      if (!matchedGallery) {
        return;
      }
      var prevImage = matchedGallery.PreviousImage;
      var nextImage = matchedGallery.NextImage;
      setLink("#prevGalleryImageLink", "/paintings/" + prevImage + ".html");
      setLink("#nextGalleryImageLink", "/paintings/" + nextImage + ".html");
      setLink("#galleryHomeLink", "/gallery/" + currentGallery + ".html");
      mjsworks.show(".gallerynav");
    }
  </script>  
@if (showSellUi)
{
  var awsWidgetsUrl = Model.String("MjsWorks-AwsWidgetsUrl");
  var awsButtonJson = Model.String("AmazonPayJson");
  <script src="@Html.Raw(awsWidgetsUrl)"></script>
  <script type="text/javascript">
    var mjsworks = mjsworks || {};
    mjsworks.purchaseConfig = @Html.Raw(awsButtonJson);
  </script>
  <script src="/assets/js/awsPurchase.min.js"></script>
}
}